 # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  push:
    branches: [ "main", "feature/*", "feature/*/*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ##########################################
  # Linux build
  ##########################################
  ubuntu:
    name: "Linux x64 Build"
    runs-on: "ubuntu-latest"

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - run: |
            download_url="https://github.com/adoptium/temurin20-binaries/releases/download/jdk-20.0.2%2B9/OpenJDK20U-jdk_x64_linux_hotspot_20.0.2_9.tar.gz"
            wget -O $RUNNER_TEMP/jdk.tar.gz $download_url
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        jdkFile: ${{ runner.temp }}/jdk.tar.gz
        architecture: x64
        java-version: 20
        cache: maven
    - name: Show toolchains
      run: cat ~/.m2/toolchains.xml
    - name: Build with Maven
      run: sh ./mvnw -B clean package -DskipTests=true
    - name: Upload application
      uses: actions/upload-artifact@v3
      with:
        name: appassembler-full-linux
        path: jmacro-dist/target/appassembler-full
  ##########################################
  # Windows build
  ##########################################
  windows:
    name: "Windows x64 Build"
    runs-on: "windows-latest"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: |
            $download_url="https://github.com/adoptium/temurin20-binaries/releases/download/jdk-20.0.2%2B9/OpenJDK20U-jdk_x64_windows_hotspot_20.0.2_9.zip"
            C:\msys64\usr\bin\wget.exe -O $RUNNER_TEMP/jdk.zip $download_url
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          jdkFile: ${{ runner.temp }}/jdk.zip
          architecture: x64
          java-version: 20.
          cache: maven
      - name: Build with Maven
        run: .\mvnw -B clean package -DskipTests=true
      - name: Upload application
        uses: actions/upload-artifact@v3
        with:
          name: appassembler-full-windows
          path: jmacro-dist/target/appassembler-full


#  depsgraph:
#    runs-on: [ "ubuntu-latest", "windows-latest" ]
#
#    if: ${{ always() }}
#    needs: [ ubuntu, windows ]
#    steps:
#    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
